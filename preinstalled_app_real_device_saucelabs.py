import os
import unittest
# iOS environment
from appium import webdriver
# Options are only available since client version 2.3.0
# If you use an older client then switch to desired_capabilities
# instead: https://github.com/appium/python-client/pull/720
from appium.options.ios import XCUITestOptions
from appium.webdriver.appium_service import AppiumService
from appium.webdriver.common.appiumby import AppiumBy
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.by import By
from selenium.webdriver.support import expected_conditions as EC

caps = {}
caps['platformName'] = 'iOS'
caps['appium:bundleId'] = 'com.apple.Health'
caps['appium:deviceName'] = 'iPhone.*'  # any iPhone available
caps['appium:deviceOrientation'] = 'portrait'
caps['appium:automationName'] = 'XCUITest'
caps['sauce:options'] = {}
caps['sauce:options']['build'] = 'appium-build-ios-preinstalled'
caps['sauce:options']['name'] = 'Health test'
caps['sauce:options']['appiumVersion'] = '2.0.0'

# url is obtained from system variable as it contains some confidential information.
# This URL is generated by saucelabs during process of setting up run
# For how to store environment variables on MacBook check following link:
# https://blog.adamgamboa.dev/how-to-set-environment-variable-in-macos/
appium_server_url = os.environ.get('SAUCELABS_URL')


class TestAppium(unittest.TestCase):
    def setUp(self) -> None:
        # Appium1 points to http://127.0.0.1:4723/wd/hub by default
        self.driver = webdriver.Remote(appium_server_url, caps)

    def tearDown(self) -> None:
        if self.driver:
            self.driver.quit()

    def test_activity_present_in_options_list(self) -> None:
        browse = self.driver.find_element(by=AppiumBy.ACCESSIBILITY_ID, value='Browse')
        browse.click()
        WebDriverWait(self.driver, 30).until(
            EC.visibility_of_element_located((By.XPATH, '//XCUIElementTypeCell[@name]')))
        options_menu = self.driver.find_elements(by=AppiumBy.XPATH,
                                                 value='//XCUIElementTypeCell//XCUIElementTypeStaticText[@name]')
        all_options = [opt.get_attribute('value') for opt in options_menu]
        assert 'Activity' in all_options


if __name__ == '__main__':
    unittest.main()
